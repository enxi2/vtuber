{"version":3,"sources":["AboutModal.tsx","StreamIcon.tsx","useScheduleData.ts","VTuberIcon.tsx","Schedule.tsx","usePoller.ts","SearchHelpModal.tsx","useStoredRecord.ts","usePreferences.ts","App.tsx","index.tsx"],"names":["AboutModal","props","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","StreamIcon","stream","thumbnail","href","link","e","console","log","parent","target","parentElement","isParentOf","currentTarget","preventDefault","src","alt","title","streamId","width","height","allow","frameBorder","useScheduleData","useState","Map","vtubers","setVtubers","OrderedMap","streams","setStreams","streamsByVtuber","setStreamsByVtuber","loadedLatest","setLoadedLatest","useEffect","fetch","then","response","json","data","reduce","vtuber","has","vtuberId","set","newStreams","source","startTime","Date","endTime","membership","parseStream","valueSeq","groupBy","map","collection","toList","toMap","catch","error","VTuberIcon","nameDisplay","name","romanizedName","shortName","seed","Math","random","hashString","x","sum","i","length","charCodeAt","Schedule","sitePref","sortPref","container","useRef","firstLoad","setFirstLoad","timeline","setTimeline","parentHeight","callback","intervalMs","result","setResult","interval","setInterval","newResult","clearInterval","usePoller","current","offsetHeight","groups","useMemo","DataSet","mapEntries","id","document","createElement","className","ReactDOM","render","get","currentTime","closestStreamTime","size","minBy","abs","getTime","getClosestStream","Infinity","content","popularity","closestStream","toArray","items","index","group","start","limitSize","style","newTimeline","Timeline","destroy","setData","redraw","setWindow","moment","subtract","toDate","add","sortBy","setOptions","align","groupOrder","a","b","orientation","selectable","stack","tooltip","followMouse","delay","min","max","zoomMin","duration","asMilliseconds","zoomMax","zoomKey","verticalScroll","maxHeight","ref","SearchHelpModal","useStoredRecord","key","factory","item","localStorage","getItem","JSON","parse","getRecordOrDefault","value","setValueInner","useCallback","newValue","setItem","stringify","toJSON","removeItem","TIMEZONES","identifier","offset","NAME_DISPLAYS","SORT_BYS","DEFAULT_SITE_PREF","timezone","getTimezoneOffset","minTimezone","getDefaultTimezone","RSitePref","Record","RFilterPref","search","RSortPref","App","aboutModalVisible","setAboutModalVisible","searchHelpModalVisible","setSearchHelpModalVisible","schedule","setSitePref","clearSitePref","filterPref","setFilterPref","clearFilterPref","setSortPref","clearSortPref","reset","usePreferences","clearData","window","confirm","Navbar","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Container","fluid","Form","Row","Group","as","Col","InputGroup","Prepend","Text","Control","placeholder","Append","Dropdown","Menu","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f775d2d7.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function AboutModal(props: {\n  show: boolean;\n  handleClose: () => void;\n}) {\n  const { show, handleClose } = props;\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>About</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>About this page</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import { MouseEvent } from \"react\";\n\nimport { Stream } from \"./types\";\n\nfunction isParentOf(parent: Element, target: Element | null): boolean {\n  while (target != null) {\n    if (parent === target) {\n      return true;\n    } else {\n      target = target.parentElement;\n    }\n  }\n  return false;\n}\n\nexport default function StreamIcon(props: { stream: Stream }) {\n  const { stream } = props;\n\n  return stream.thumbnail != null ? (\n    <a\n      href={stream.link}\n      onClick={(e: MouseEvent) => {\n        console.log(e);\n        if (!isParentOf(e.currentTarget, e.target as Element)) {\n          // TODO Prevent visiting the link when clicking and dragging\n          e.preventDefault();\n        }\n      }}\n    >\n      <img src={stream.thumbnail} alt={stream.title} />\n    </a>\n  ) : (\n    <iframe\n      src={`https://www.youtube.com/embed/${stream.streamId}`}\n      width=\"240\"\n      height=\"135\"\n      title={stream.title}\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      frameBorder=\"0\"\n    />\n  );\n}\n","import { List, Map, OrderedMap } from \"immutable\";\nimport { useEffect, useState } from \"react\";\n\nimport {\n  ScheduleData,\n  SerializedStream,\n  Stream,\n  StreamId,\n  StreamSource,\n  VTuberId,\n  VTuber,\n} from \"./types\";\n\nfunction parseStream(stream: SerializedStream): Stream {\n  return {\n    streamId: stream.streamId,\n    vtuberId: stream.vtuberId,\n    source: stream.source as StreamSource | null,\n    title: stream.title,\n    link: stream.link,\n    thumbnail: stream.thumbnail,\n    startTime: new Date(stream.startTime),\n    endTime: stream.endTime != null ? new Date(stream.endTime) : null,\n    membership: stream.membership === 1,\n  };\n}\n\nexport default function useScheduleData() {\n  const [vtubers, setVtubers] = useState<Map<VTuberId, VTuber>>(Map());\n  const [streams, setStreams] = useState<Map<StreamId, Stream>>(OrderedMap());\n  const [streamsByVtuber, setStreamsByVtuber] = useState<\n    Map<VTuberId, List<Stream>>\n  >(Map());\n  const [loadedLatest, setLoadedLatest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loadedLatest) {\n      return;\n    }\n\n    fetch(\"/data/latest.json\")\n      .then((response) => response.json())\n      .then((data: ScheduleData) => {\n        setVtubers(\n          data.vtubers.reduce(\n            (vtubers, vtuber) =>\n              vtubers.has(vtuber.vtuberId)\n                ? vtubers\n                : vtubers.set(vtuber.vtuberId, vtuber),\n            vtubers\n          )\n        );\n        const newStreams = data.streams.reduce(\n          (streams, stream) =>\n            streams.has(stream.streamId)\n              ? streams\n              : streams.set(stream.streamId, parseStream(stream)),\n          streams\n        );\n        setStreams(newStreams);\n        setStreamsByVtuber(\n          newStreams\n            .valueSeq()\n            .groupBy((stream) => stream.vtuberId)\n            .map((collection) => collection.toList())\n            .toMap()\n        );\n        setLoadedLatest(true);\n      })\n      .catch((e) => console.error(e));\n  }, [loadedLatest, streams, vtubers]);\n\n  return { vtubers, streams, streamsByVtuber };\n}\n","import { NameDisplay, VTuber } from \"./types\";\n\nexport default function VTuberIcon(props: {\n  nameDisplay: NameDisplay;\n  vtuber: VTuber;\n}) {\n  const { nameDisplay, vtuber } = props;\n\n  return (\n    <a href={vtuber.link}>\n      <img src={vtuber.thumbnail} alt={vtuber.name} />\n      <br />\n      {nameDisplay === \"original\"\n        ? vtuber.name\n        : nameDisplay === \"romaji\"\n        ? vtuber.romanizedName\n        : vtuber.shortName}\n    </a>\n  );\n}\n","import { List, Map, Record } from \"immutable\";\nimport moment from \"moment\";\nimport { RefObject, useEffect, useMemo, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DataSet, Timeline } from \"vis-timeline/standalone\";\n\nimport StreamIcon from \"./StreamIcon\";\nimport { SortBy, Stream, VTuber, VTuberId } from \"./types\";\nimport usePoller from \"./usePoller\";\nimport { SitePref, SortPref } from \"./usePreferences\";\nimport useScheduleData from \"./useScheduleData\";\nimport VTuberIcon from \"./VTuberIcon\";\n\ntype GroupData = {\n  id: string;\n  content: HTMLDivElement;\n  popularity: number;\n  closestStream: number;\n};\n\nfunction getClosestStream(\n  vtuber: VTuber,\n  streamsByVtuber: Map<string, List<Stream>>,\n  currentTime: Date\n): Stream | null {\n  const streams = streamsByVtuber.get(vtuber.vtuberId);\n  if (streams == null || streams.size === 0) {\n    return null;\n  }\n  return streams.minBy((stream) =>\n    Math.abs(stream.startTime.getTime() - currentTime.getTime())\n  )!;\n}\n\nconst seed = 1.0 + Math.random();\n\nfunction hashString(x: string): number {\n  let sum = 0;\n  for (let i = 0; i < x.length; i++) {\n    sum += x.charCodeAt(i);\n  }\n  return (sum * seed) % 1;\n}\n\nfunction getGroupOrder(\n  sortBy: SortBy\n): ((a: GroupData, b: GroupData) => number) | undefined {\n  if (sortBy === \"popularity\") {\n    return (a: GroupData, b: GroupData) => b.popularity - a.popularity;\n  } else if (sortBy === \"next stream\") {\n    return (a: GroupData, b: GroupData) => a.closestStream - b.closestStream;\n  } else if (sortBy === \"random\") {\n    return (a: GroupData, b: GroupData) => hashString(a.id) - hashString(b.id);\n  }\n  return undefined;\n}\n\nexport default function Schedule(props: {\n  parent: RefObject<HTMLDivElement>;\n  sitePref: Record<SitePref>;\n  sortPref: Record<SortPref>;\n}) {\n  const { parent, sitePref, sortPref } = props;\n\n  const container = useRef<HTMLDivElement>(null);\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\n  const [timeline, setTimeline] = useState<Timeline | null>(null);\n\n  const parentHeight = usePoller(() => parent.current?.offsetHeight, 500);\n\n  const { vtubers, streams, streamsByVtuber } = useScheduleData();\n\n  const groups: DataSet = useMemo(\n    () =>\n      new DataSet(\n        vtubers\n          .mapEntries(([id, vtuber]): [VTuberId, GroupData] => {\n            const container = document.createElement(\"div\");\n            container.className = \"vtuber\";\n            ReactDOM.render(\n              <VTuberIcon\n                nameDisplay={sitePref.get(\"nameDisplay\")}\n                vtuber={vtuber}\n              />,\n              container\n            );\n\n            const currentTime = new Date();\n            const closestStreamTime =\n              getClosestStream(\n                vtuber,\n                streamsByVtuber,\n                currentTime\n              )?.startTime.getTime() ?? Infinity;\n            return [\n              id,\n              {\n                id,\n                content: container,\n                popularity: vtuber.popularity,\n                closestStream: Math.abs(\n                  currentTime.getTime() - closestStreamTime\n                ),\n              },\n            ];\n          })\n          .valueSeq()\n          .toArray()\n      ),\n    [sitePref, streamsByVtuber, vtubers]\n  );\n\n  const items: DataSet = useMemo(\n    () =>\n      new DataSet(\n        streams\n          .mapEntries(([id, stream], index) => {\n            const container = document.createElement(\"div\");\n            container.className = \"stream\";\n            ReactDOM.render(<StreamIcon stream={stream} />, container);\n\n            return [\n              id,\n              {\n                id,\n                group: stream.vtuberId,\n                content: container,\n                start: stream.startTime,\n                limitSize: false,\n                title: stream.title,\n                style: `\n                  z-index: ${index};\n                `,\n              },\n            ];\n          })\n          .valueSeq()\n          .toArray()\n      ),\n    [streams]\n  );\n\n  // Create a Timeline\n  useEffect(() => {\n    const newTimeline = new Timeline(container.current!, new DataSet());\n    setTimeline(newTimeline);\n    return () => newTimeline.destroy();\n  }, []);\n\n  useEffect(() => {\n    if (timeline == null) {\n      return;\n    }\n\n    timeline.setData({ groups, items });\n    timeline.redraw();\n\n    if (firstLoad) {\n      timeline.setWindow(\n        moment().subtract(8, \"hours\").toDate(),\n        moment().add(24, \"hours\").toDate()\n      );\n      setFirstLoad(false);\n    }\n  }, [firstLoad, groups, items, timeline]);\n\n  useEffect(() => {\n    if (timeline == null) {\n      return;\n    }\n\n    timeline.setOptions({\n      align: \"left\",\n      groupOrder: getGroupOrder(sortPref.get(\"sortBy\")),\n      orientation: \"top\",\n      selectable: false,\n      stack: false,\n      tooltip: {\n        followMouse: true,\n        delay: 0,\n      },\n      min: moment().subtract(10, \"days\").toDate(),\n      max: moment().add(10, \"days\").toDate(),\n      zoomMin: moment.duration(4, \"hours\").asMilliseconds(),\n      zoomMax: moment.duration(2, \"weeks\").asMilliseconds(),\n      zoomKey: \"ctrlKey\",\n      verticalScroll: true,\n      maxHeight: (parentHeight ?? 1000) - 16, // TODO resize this to the div size\n    });\n  }, [parentHeight, timeline, sortPref]);\n\n  return <div ref={container} />;\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function usePoller<T>(callback: () => T, intervalMs: number) {\n  const [result, setResult] = useState<T>();\n\n  useEffect(() => {\n    const checkCallback = () => {\n      const newResult = callback();\n      if (result !== newResult) {\n        setResult(newResult);\n      }\n    };\n    const interval = setInterval(checkCallback, intervalMs);\n\n    return () => clearInterval(interval);\n  }, [callback, intervalMs, result]);\n\n  return result;\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function SearchHelpModal(props: {\n  show: boolean;\n  handleClose: () => void;\n}) {\n  const { show, handleClose } = props;\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Search Help</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>About this page</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import { Record } from \"immutable\";\nimport { useCallback, useState } from \"react\";\n\nfunction getRecordOrDefault<T>(\n  key: string,\n  factory: (values?: any) => Record<T>\n): Record<T> {\n  const item = localStorage.getItem(key);\n  if (item != null) {\n    try {\n      return factory(JSON.parse(item));\n    } catch (e) {\n      return factory();\n    }\n  }\n  return factory();\n}\n\nexport default function useStoredRecord<T>(\n  key: string,\n  factory: (values?: any) => Record<T>\n): [Record<T>, (value: Record<T>) => void, () => void] {\n  const [value, setValueInner] = useState<Record<T>>(\n    getRecordOrDefault<T>(key, factory)\n  );\n\n  const setValue = useCallback(\n    (newValue: Record<T>): void => {\n      localStorage.setItem(key, JSON.stringify(newValue.toJSON()));\n      setValueInner(newValue);\n    },\n    [key]\n  );\n\n  const clearValue = useCallback(() => {\n    localStorage.removeItem(key);\n    setValueInner(factory());\n  }, [factory, key]);\n\n  return [value, setValue, clearValue];\n}\n","import { Record } from \"immutable\";\nimport { useCallback } from \"react\";\n\nimport { NameDisplay, SortBy, Timezone } from \"./types\";\nimport useStoredRecord from \"./useStoredRecord\";\n\nexport const TIMEZONES: Timezone[] = [\n  { name: \"UTC\", identifier: \"UTC\", offset: 0 },\n  { name: \"PDT\", identifier: \"America/Los_Angeles\", offset: 480 },\n];\n\nexport const NAME_DISPLAYS: NameDisplay[] = [\"original\", \"romaji\", \"short\"];\n\nexport const SORT_BYS: SortBy[] = [\"next stream\", \"popularity\", \"random\"];\n\nfunction getDefaultTimezone(): Timezone {\n  const offset = new Date().getTimezoneOffset();\n  const timezone = TIMEZONES.reduce((minTimezone, timezone) =>\n    Math.abs(offset - timezone.offset) < Math.abs(offset - minTimezone.offset)\n      ? timezone\n      : minTimezone\n  );\n  if (timezone != null) {\n    return timezone;\n  }\n\n  // Return UTC\n  return TIMEZONES[0];\n}\n\nexport type SitePref = {\n  timezone: Timezone;\n  nameDisplay: NameDisplay;\n};\n\nconst DEFAULT_SITE_PREF: SitePref = {\n  timezone: getDefaultTimezone(),\n  nameDisplay: \"original\",\n};\n\nexport type FilterPref = {\n  search: string;\n};\n\nconst DEFAULT_FILTER_PREF: FilterPref = {\n  search: \"\",\n};\n\nexport type SortPref = {\n  sortBy: SortBy;\n};\n\nconst DEFAULT_SORT_PREF: SortPref = {\n  sortBy: \"next stream\",\n};\n\nexport const RSitePref = Record<SitePref>(DEFAULT_SITE_PREF);\nexport const RFilterPref = Record<FilterPref>(DEFAULT_FILTER_PREF);\nexport const RSortPref = Record<SortPref>(DEFAULT_SORT_PREF);\n\nexport default function usePreferences() {\n  const [sitePref, setSitePref, clearSitePref] = useStoredRecord<SitePref>(\n    \"site\",\n    RSitePref\n  );\n  const [\n    filterPref,\n    setFilterPref,\n    clearFilterPref,\n  ] = useStoredRecord<FilterPref>(\"filter\", RFilterPref);\n  const [sortPref, setSortPref, clearSortPref] = useStoredRecord<SortPref>(\n    \"sort\",\n    RSortPref\n  );\n\n  const reset = useCallback(() => {\n    clearSitePref();\n    clearFilterPref();\n    clearSortPref();\n  }, [clearSitePref, clearFilterPref, clearSortPref]);\n\n  return {\n    sitePref,\n    setSitePref,\n    filterPref,\n    setFilterPref,\n    sortPref,\n    setSortPref,\n    reset,\n  };\n}\n","import { useCallback, useRef, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\nimport AboutModal from \"./AboutModal\";\nimport Schedule from \"./Schedule\";\nimport SearchHelpModal from \"./SearchHelpModal\";\nimport usePreferences, {\n  NAME_DISPLAYS,\n  SORT_BYS,\n  TIMEZONES,\n} from \"./usePreferences\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [aboutModalVisible, setAboutModalVisible] = useState<boolean>(false);\n  const [searchHelpModalVisible, setSearchHelpModalVisible] = useState<boolean>(\n    false\n  );\n  const schedule = useRef<HTMLDivElement>(null);\n\n  const {\n    sitePref,\n    setSitePref,\n    sortPref,\n    setSortPref,\n    reset,\n  } = usePreferences();\n\n  const clearData = useCallback(() => {\n    if (\n      window.confirm(\n        \"Press OK to clear all bookmarks, filters, etc. from this web page.\"\n      )\n    ) {\n      reset();\n    }\n  }, [reset]);\n\n  return (\n    <div className=\"app d-flex flex-column h-100\">\n      <Navbar>\n        <Navbar.Brand href=\"#\">VTuber Schedules</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar\" />\n        <Navbar.Collapse id=\"navbar\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link href=\"#clear\" onClick={clearData}>\n              Clear Data\n            </Nav.Link>\n            <Nav.Link href=\"#about\" onClick={() => setAboutModalVisible(true)}>\n              About\n            </Nav.Link>\n            <NavDropdown id=\"timezone\" title={sitePref.get(\"timezone\").name}>\n              {TIMEZONES.map((timezone) => (\n                <NavDropdown.Item\n                  key={timezone.name}\n                  onClick={() =>\n                    setSitePref(sitePref.set(\"timezone\", timezone))\n                  }\n                >\n                  {timezone.name}\n                </NavDropdown.Item>\n              ))}\n            </NavDropdown>\n            <NavDropdown id=\"name_display\" title={sitePref.get(\"nameDisplay\")}>\n              {NAME_DISPLAYS.map((nameDisplay) => (\n                <NavDropdown.Item\n                  key={nameDisplay}\n                  className=\"text-capitalize\"\n                  onClick={() =>\n                    setSitePref(sitePref.set(\"nameDisplay\", nameDisplay))\n                  }\n                >\n                  {nameDisplay}\n                </NavDropdown.Item>\n              ))}\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Container fluid={true} className=\"px-2\">\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} className=\"m-0\">\n              <InputGroup className=\"mb-2 mr-sm-2\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Search:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  id=\"search\"\n                  placeholder=\"v:pikamee g:voms title\"\n                />\n                <InputGroup.Append>\n                  <InputGroup.Text\n                    className=\"help\"\n                    onClick={() => setSearchHelpModalVisible(true)}\n                  >\n                    ?\n                  </InputGroup.Text>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n            <Form.Group as={Col} className=\"m-0\">\n              <Dropdown>\n                <Dropdown.Toggle id=\"sort\" className=\"text-capitalize\">\n                  Sort by: {sortPref.get(\"sortBy\")}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {SORT_BYS.map((sortBy) => (\n                    <Dropdown.Item\n                      key={sortBy}\n                      className=\"text-capitalize\"\n                      onClick={() =>\n                        setSortPref(sortPref.set(\"sortBy\", sortBy))\n                      }\n                    >\n                      {sortBy}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n      </Container>\n      <Container fluid={true} className=\"schedule p-2\" ref={schedule}>\n        <Schedule parent={schedule} sitePref={sitePref} sortPref={sortPref} />\n      </Container>\n      <AboutModal\n        show={aboutModalVisible}\n        handleClose={() => setAboutModalVisible(false)}\n      />\n      <SearchHelpModal\n        show={searchHelpModalVisible}\n        handleClose={() => setSearchHelpModalVisible(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}